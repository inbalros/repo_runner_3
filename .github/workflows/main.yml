# This is a basic workflow to help you get started with Actions 

name: CI 

# Controls when the action will run. Triggers the workflow on push or pull request   
# events but only for the master branch
on:
  issues:
    types: [opened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
            
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Support longpaths
      run: git config --system core.longpaths true
    
    - name: Checkout repository_mining
      uses: actions/checkout@v2
      with:
        repository: amir9979/repository_mining
        path: .
        fetch-depth: 0

#        ref: f0bb309d3eb121b47be676f50ee9fa2e619967a6
    
    - name: Checkout javadiff
      uses: actions/checkout@v2
      with:
        repository: amir9979/javadiff
        path: ./javadiff
        fetch-depth: 0

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest 
        pip install gitpython
        pip install jira
        pip install termcolor 
        pip install openpyxl  
        pip install javalang
        pip install pathlib
        pip install junitparser
        pip install -r requirements.txt
    - name: execute
      run: python ./javadiff/setup.py install

    - name: echo
      run: echo 123 > repository_data\r.txt

    - name: execute
      run: python Main.py -c ${{github.event.issue.title}} -n 5 -s 0 -f

    - name: Upload repository_data
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: repository_data
        # A file, directory or wildcard pattern that describes what to upload
        path: repository_data

    - name: create zip
      run: python -c "import shutil; shutil.make_archive('data', 'zip')"
      working-directory: repository_data

    - name: ls
      run: ls -R

    - name: Upload results to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: repository_data/data.zip
        asset_name: ${{github.event.issue.title}}.zip
        tag: ${{github.event.issue.title}}_${{github.event.issue.number}}

    - name: Close Issue
      continue-on-error: true
      uses: peter-evans/close-issue@v1
      with:
        comment: |
          The issue you have reported seems to be resolved now.
          The extracted data can be found at releases.
